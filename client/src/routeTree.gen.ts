/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as SignupImport } from "./routes/signup"
import { Route as LoginImport } from "./routes/login"
import { Route as FundsImport } from "./routes/funds"
import { Route as CreatefundImport } from "./routes/createfund"
import { Route as IndexImport } from "./routes/index"
import { Route as EditfundEditfundIdImport } from "./routes/editfund.$editfundId"

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: "/signup",
  path: "/signup",
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: "/login",
  path: "/login",
  getParentRoute: () => rootRoute,
} as any)

const FundsRoute = FundsImport.update({
  id: "/funds",
  path: "/funds",
  getParentRoute: () => rootRoute,
} as any)

const CreatefundRoute = CreatefundImport.update({
  id: "/createfund",
  path: "/createfund",
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const EditfundEditfundIdRoute = EditfundEditfundIdImport.update({
  id: "/editfund/$editfundId",
  path: "/editfund/$editfundId",
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/createfund": {
      id: "/createfund"
      path: "/createfund"
      fullPath: "/createfund"
      preLoaderRoute: typeof CreatefundImport
      parentRoute: typeof rootRoute
    }
    "/funds": {
      id: "/funds"
      path: "/funds"
      fullPath: "/funds"
      preLoaderRoute: typeof FundsImport
      parentRoute: typeof rootRoute
    }
    "/login": {
      id: "/login"
      path: "/login"
      fullPath: "/login"
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    "/signup": {
      id: "/signup"
      path: "/signup"
      fullPath: "/signup"
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    "/editfund/$editfundId": {
      id: "/editfund/$editfundId"
      path: "/editfund/$editfundId"
      fullPath: "/editfund/$editfundId"
      preLoaderRoute: typeof EditfundEditfundIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "/createfund": typeof CreatefundRoute
  "/funds": typeof FundsRoute
  "/login": typeof LoginRoute
  "/signup": typeof SignupRoute
  "/editfund/$editfundId": typeof EditfundEditfundIdRoute
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "/createfund": typeof CreatefundRoute
  "/funds": typeof FundsRoute
  "/login": typeof LoginRoute
  "/signup": typeof SignupRoute
  "/editfund/$editfundId": typeof EditfundEditfundIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/": typeof IndexRoute
  "/createfund": typeof CreatefundRoute
  "/funds": typeof FundsRoute
  "/login": typeof LoginRoute
  "/signup": typeof SignupRoute
  "/editfund/$editfundId": typeof EditfundEditfundIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | "/"
    | "/createfund"
    | "/funds"
    | "/login"
    | "/signup"
    | "/editfund/$editfundId"
  fileRoutesByTo: FileRoutesByTo
  to:
    | "/"
    | "/createfund"
    | "/funds"
    | "/login"
    | "/signup"
    | "/editfund/$editfundId"
  id:
    | "__root__"
    | "/"
    | "/createfund"
    | "/funds"
    | "/login"
    | "/signup"
    | "/editfund/$editfundId"
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreatefundRoute: typeof CreatefundRoute
  FundsRoute: typeof FundsRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  EditfundEditfundIdRoute: typeof EditfundEditfundIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreatefundRoute: CreatefundRoute,
  FundsRoute: FundsRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  EditfundEditfundIdRoute: EditfundEditfundIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/createfund",
        "/funds",
        "/login",
        "/signup",
        "/editfund/$editfundId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/createfund": {
      "filePath": "createfund.tsx"
    },
    "/funds": {
      "filePath": "funds.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/editfund/$editfundId": {
      "filePath": "editfund.$editfundId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
